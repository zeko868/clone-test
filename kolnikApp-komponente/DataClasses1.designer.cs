#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace kolnikApp_komponente
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.Runtime.Serialization;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "16001_DB")]
    public partial class DataClasses1DataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void Insertartikl(artikl instance);
        partial void Updateartikl(artikl instance);
        partial void Deleteartikl(artikl instance);
        partial void Insertgradiliste(gradiliste instance);
        partial void Updategradiliste(gradiliste instance);
        partial void Deletegradiliste(gradiliste instance);
        partial void Insertzaposlenik(zaposlenik instance);
        partial void Updatezaposlenik(zaposlenik instance);
        partial void Deletezaposlenik(zaposlenik instance);
        partial void Insertkorisnicki_racun(korisnicki_racun instance);
        partial void Updatekorisnicki_racun(korisnicki_racun instance);
        partial void Deletekorisnicki_racun(korisnicki_racun instance);
        partial void Insertnalog_za_proizvodnju(nalog_za_proizvodnju instance);
        partial void Updatenalog_za_proizvodnju(nalog_za_proizvodnju instance);
        partial void Deletenalog_za_proizvodnju(nalog_za_proizvodnju instance);
        partial void Insertnarudzbenica_bitumenske_mjesavine(narudzbenica_bitumenske_mjesavine instance);
        partial void Updatenarudzbenica_bitumenske_mjesavine(narudzbenica_bitumenske_mjesavine instance);
        partial void Deletenarudzbenica_bitumenske_mjesavine(narudzbenica_bitumenske_mjesavine instance);
        partial void Insertotpremnica(otpremnica instance);
        partial void Updateotpremnica(otpremnica instance);
        partial void Deleteotpremnica(otpremnica instance);
        partial void Insertpoduzece(poduzece instance);
        partial void Updatepoduzece(poduzece instance);
        partial void Deletepoduzece(poduzece instance);
        partial void Insertrabat(rabat instance);
        partial void Updaterabat(rabat instance);
        partial void Deleterabat(rabat instance);
        partial void Insertracun(racun instance);
        partial void Updateracun(racun instance);
        partial void Deleteracun(racun instance);
        partial void Insertradi(radi instance);
        partial void Updateradi(radi instance);
        partial void Deleteradi(radi instance);
        partial void Insertradno_mjesto(radno_mjesto instance);
        partial void Updateradno_mjesto(radno_mjesto instance);
        partial void Deleteradno_mjesto(radno_mjesto instance);
        partial void Inserttablicna_privilegija(tablicna_privilegija instance);
        partial void Updatetablicna_privilegija(tablicna_privilegija instance);
        partial void Deletetablicna_privilegija(tablicna_privilegija instance);
        partial void Inserttemeljnica(temeljnica instance);
        partial void Updatetemeljnica(temeljnica instance);
        partial void Deletetemeljnica(temeljnica instance);
        partial void Insertvozi(vozi instance);
        partial void Updatevozi(vozi instance);
        partial void Deletevozi(vozi instance);
        partial void Insertvozilo(vozilo instance);
        partial void Updatevozilo(vozilo instance);
        partial void Deletevozilo(vozilo instance);
        partial void Insertzaposlen(zaposlen instance);
        partial void Updatezaposlen(zaposlen instance);
        partial void Deletezaposlen(zaposlen instance);
        #endregion

        public DataClasses1DataContext() :
                base(global::kolnikApp_komponente.Properties.Settings.Default._16001_DBConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<artikl> artikls
        {
            get
            {
                return this.GetTable<artikl>();
            }
        }

        public System.Data.Linq.Table<gradiliste> gradilistes
        {
            get
            {
                return this.GetTable<gradiliste>();
            }
        }

        public System.Data.Linq.Table<zaposlenik> zaposleniks
        {
            get
            {
                return this.GetTable<zaposlenik>();
            }
        }

        public System.Data.Linq.Table<korisnicki_racun> korisnicki_racuns
        {
            get
            {
                return this.GetTable<korisnicki_racun>();
            }
        }

        public System.Data.Linq.Table<nalog_za_proizvodnju> nalog_za_proizvodnjus
        {
            get
            {
                return this.GetTable<nalog_za_proizvodnju>();
            }
        }

        public System.Data.Linq.Table<narudzbenica_bitumenske_mjesavine> narudzbenica_bitumenske_mjesavines
        {
            get
            {
                return this.GetTable<narudzbenica_bitumenske_mjesavine>();
            }
        }

        public System.Data.Linq.Table<otpremnica> otpremnicas
        {
            get
            {
                return this.GetTable<otpremnica>();
            }
        }

        public System.Data.Linq.Table<poduzece> poduzeces
        {
            get
            {
                return this.GetTable<poduzece>();
            }
        }

        public System.Data.Linq.Table<rabat> rabats
        {
            get
            {
                return this.GetTable<rabat>();
            }
        }

        public System.Data.Linq.Table<racun> racuns
        {
            get
            {
                return this.GetTable<racun>();
            }
        }

        public System.Data.Linq.Table<radi> radis
        {
            get
            {
                return this.GetTable<radi>();
            }
        }

        public System.Data.Linq.Table<radno_mjesto> radno_mjestos
        {
            get
            {
                return this.GetTable<radno_mjesto>();
            }
        }

        public System.Data.Linq.Table<tablicna_privilegija> tablicna_privilegijas
        {
            get
            {
                return this.GetTable<tablicna_privilegija>();
            }
        }

        public System.Data.Linq.Table<temeljnica> temeljnicas
        {
            get
            {
                return this.GetTable<temeljnica>();
            }
        }

        public System.Data.Linq.Table<vozi> vozis
        {
            get
            {
                return this.GetTable<vozi>();
            }
        }

        public System.Data.Linq.Table<vozilo> vozilos
        {
            get
            {
                return this.GetTable<vozilo>();
            }
        }

        public System.Data.Linq.Table<zaposlen> zaposlens
        {
            get
            {
                return this.GetTable<zaposlen>();
            }
        }
    }

    [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.artikl")]
    public partial class artikl : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _naziv;

        private decimal _jedinicna_cijena;

        private string _jedinica_mjere;

        private EntitySet<rabat> _rabats;

        private EntitySet<temeljnica> _temeljnicas;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnnazivChanging(string value);
        partial void OnnazivChanged();
        partial void Onjedinicna_cijenaChanging(decimal value);
        partial void Onjedinicna_cijenaChanged();
        partial void Onjedinica_mjereChanging(string value);
        partial void Onjedinica_mjereChanged();
        #endregion

        public artikl()
        {
            this._rabats = new EntitySet<rabat>(new Action<rabat>(this.attach_rabats), new Action<rabat>(this.detach_rabats));
            this._temeljnicas = new EntitySet<temeljnica>(new Action<temeljnica>(this.attach_temeljnicas), new Action<temeljnica>(this.detach_temeljnicas));
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_naziv", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string naziv
        {
            get
            {
                return this._naziv;
            }
            set
            {
                if ((this._naziv != value))
                {
                    this.OnnazivChanging(value);
                    this.SendPropertyChanging();
                    this._naziv = value;
                    this.SendPropertyChanged("naziv");
                    this.OnnazivChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_jedinicna_cijena", DbType = "Decimal(9,2) NOT NULL")]
        public decimal jedinicna_cijena
        {
            get
            {
                return this._jedinicna_cijena;
            }
            set
            {
                if ((this._jedinicna_cijena != value))
                {
                    this.Onjedinicna_cijenaChanging(value);
                    this.SendPropertyChanging();
                    this._jedinicna_cijena = value;
                    this.SendPropertyChanged("jedinicna_cijena");
                    this.Onjedinicna_cijenaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_jedinica_mjere", DbType = "VarChar(5) NOT NULL", CanBeNull = false)]
        public string jedinica_mjere
        {
            get
            {
                return this._jedinica_mjere;
            }
            set
            {
                if ((this._jedinica_mjere != value))
                {
                    this.Onjedinica_mjereChanging(value);
                    this.SendPropertyChanging();
                    this._jedinica_mjere = value;
                    this.SendPropertyChanged("jedinica_mjere");
                    this.Onjedinica_mjereChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "artikl_rabat", Storage = "_rabats", ThisKey = "id", OtherKey = "artikl")]
        public EntitySet<rabat> rabats
        {
            get
            {
                return this._rabats;
            }
            set
            {
                this._rabats.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "artikl_temeljnica", Storage = "_temeljnicas", ThisKey = "id", OtherKey = "artikl")]
        public EntitySet<temeljnica> temeljnicas
        {
            get
            {
                return this._temeljnicas;
            }
            set
            {
                this._temeljnicas.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_rabats(rabat entity)
        {
            this.SendPropertyChanging();
            entity.artikl1 = this;
        }

        private void detach_rabats(rabat entity)
        {
            this.SendPropertyChanging();
            entity.artikl1 = null;
        }

        private void attach_temeljnicas(temeljnica entity)
        {
            this.SendPropertyChanging();
            entity.artikl1 = this;
        }

        private void detach_temeljnicas(temeljnica entity)
        {
            this.SendPropertyChanging();
            entity.artikl1 = null;
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.gradiliste")]
    public partial class gradiliste : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _naziv_mjesta;

        private EntitySet<nalog_za_proizvodnju> _nalog_za_proizvodnjus;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void Onnaziv_mjestaChanging(string value);
        partial void Onnaziv_mjestaChanged();
        #endregion

        public gradiliste()
        {
            this._nalog_za_proizvodnjus = new EntitySet<nalog_za_proizvodnju>(new Action<nalog_za_proizvodnju>(this.attach_nalog_za_proizvodnjus), new Action<nalog_za_proizvodnju>(this.detach_nalog_za_proizvodnjus));
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_naziv_mjesta", DbType = "VarChar(45) NOT NULL", CanBeNull = false)]
        public string naziv_mjesta
        {
            get
            {
                return this._naziv_mjesta;
            }
            set
            {
                if ((this._naziv_mjesta != value))
                {
                    this.Onnaziv_mjestaChanging(value);
                    this.SendPropertyChanging();
                    this._naziv_mjesta = value;
                    this.SendPropertyChanged("naziv_mjesta");
                    this.Onnaziv_mjestaChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "gradiliste_nalog_za_proizvodnju", Storage = "_nalog_za_proizvodnjus", ThisKey = "id", OtherKey = "gradiliste")]
        public EntitySet<nalog_za_proizvodnju> nalog_za_proizvodnjus
        {
            get
            {
                return this._nalog_za_proizvodnjus;
            }
            set
            {
                this._nalog_za_proizvodnjus.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_nalog_za_proizvodnjus(nalog_za_proizvodnju entity)
        {
            this.SendPropertyChanging();
            entity.gradiliste1 = this;
        }

        private void detach_nalog_za_proizvodnjus(nalog_za_proizvodnju entity)
        {
            this.SendPropertyChanging();
            entity.gradiliste1 = null;
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.zaposlenik")]
    public partial class zaposlenik : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _oib;

        private string _ime;

        private string _prezime;

        private EntityRef<korisnicki_racun> _korisnicki_racun;

        private EntitySet<nalog_za_proizvodnju> _nalog_za_proizvodnjus;

        private EntitySet<otpremnica> _otpremnicas;

        private EntitySet<racun> _racuns;

        private EntitySet<radi> _radis;

        private EntitySet<temeljnica> _temeljnicas;

        private EntitySet<vozi> _vozis;

        private EntitySet<zaposlen> _zaposlens;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnoibChanging(string value);
        partial void OnoibChanged();
        partial void OnimeChanging(string value);
        partial void OnimeChanged();
        partial void OnprezimeChanging(string value);
        partial void OnprezimeChanged();
        #endregion

        public zaposlenik()
        {
            this._korisnicki_racun = default(EntityRef<korisnicki_racun>);
            this._nalog_za_proizvodnjus = new EntitySet<nalog_za_proizvodnju>(new Action<nalog_za_proizvodnju>(this.attach_nalog_za_proizvodnjus), new Action<nalog_za_proizvodnju>(this.detach_nalog_za_proizvodnjus));
            this._otpremnicas = new EntitySet<otpremnica>(new Action<otpremnica>(this.attach_otpremnicas), new Action<otpremnica>(this.detach_otpremnicas));
            this._racuns = new EntitySet<racun>(new Action<racun>(this.attach_racuns), new Action<racun>(this.detach_racuns));
            this._radis = new EntitySet<radi>(new Action<radi>(this.attach_radis), new Action<radi>(this.detach_radis));
            this._temeljnicas = new EntitySet<temeljnica>(new Action<temeljnica>(this.attach_temeljnicas), new Action<temeljnica>(this.detach_temeljnicas));
            this._vozis = new EntitySet<vozi>(new Action<vozi>(this.attach_vozis), new Action<vozi>(this.detach_vozis));
            this._zaposlens = new EntitySet<zaposlen>(new Action<zaposlen>(this.attach_zaposlens), new Action<zaposlen>(this.detach_zaposlens));
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_oib", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string oib
        {
            get
            {
                return this._oib;
            }
            set
            {
                if ((this._oib != value))
                {
                    this.OnoibChanging(value);
                    this.SendPropertyChanging();
                    this._oib = value;
                    this.SendPropertyChanged("oib");
                    this.OnoibChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ime", DbType = "VarChar(45) NOT NULL", CanBeNull = false)]
        public string ime
        {
            get
            {
                return this._ime;
            }
            set
            {
                if ((this._ime != value))
                {
                    this.OnimeChanging(value);
                    this.SendPropertyChanging();
                    this._ime = value;
                    this.SendPropertyChanged("ime");
                    this.OnimeChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_prezime", DbType = "VarChar(45) NOT NULL", CanBeNull = false)]
        public string prezime
        {
            get
            {
                return this._prezime;
            }
            set
            {
                if ((this._prezime != value))
                {
                    this.OnprezimeChanging(value);
                    this.SendPropertyChanging();
                    this._prezime = value;
                    this.SendPropertyChanged("prezime");
                    this.OnprezimeChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_korisnicki_racun", Storage = "_korisnicki_racun", ThisKey = "oib", OtherKey = "zaposlenik", IsUnique = true, IsForeignKey = false)]
        public korisnicki_racun korisnicki_racun
        {
            get
            {
                return this._korisnicki_racun.Entity;
            }
            set
            {
                korisnicki_racun previousValue = this._korisnicki_racun.Entity;
                if (((previousValue != value)
                            || (this._korisnicki_racun.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._korisnicki_racun.Entity = null;
                        previousValue.zaposlenik1 = null;
                    }
                    this._korisnicki_racun.Entity = value;
                    if ((value != null))
                    {
                        value.zaposlenik1 = this;
                    }
                    this.SendPropertyChanged("korisnicki_racun");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_nalog_za_proizvodnju", Storage = "_nalog_za_proizvodnjus", ThisKey = "oib", OtherKey = "izdavatelj")]
        public EntitySet<nalog_za_proizvodnju> nalog_za_proizvodnjus
        {
            get
            {
                return this._nalog_za_proizvodnjus;
            }
            set
            {
                this._nalog_za_proizvodnjus.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_otpremnica", Storage = "_otpremnicas", ThisKey = "oib", OtherKey = "otpremitelj")]
        public EntitySet<otpremnica> otpremnicas
        {
            get
            {
                return this._otpremnicas;
            }
            set
            {
                this._otpremnicas.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_racun", Storage = "_racuns", ThisKey = "oib", OtherKey = "izdavatelj")]
        public EntitySet<racun> racuns
        {
            get
            {
                return this._racuns;
            }
            set
            {
                this._racuns.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_radi", Storage = "_radis", ThisKey = "oib", OtherKey = "zaposlenik")]
        public EntitySet<radi> radis
        {
            get
            {
                return this._radis;
            }
            set
            {
                this._radis.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_temeljnica", Storage = "_temeljnicas", ThisKey = "oib", OtherKey = "vozac")]
        public EntitySet<temeljnica> temeljnicas
        {
            get
            {
                return this._temeljnicas;
            }
            set
            {
                this._temeljnicas.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_vozi", Storage = "_vozis", ThisKey = "oib", OtherKey = "vozac")]
        public EntitySet<vozi> vozis
        {
            get
            {
                return this._vozis;
            }
            set
            {
                this._vozis.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_zaposlen", Storage = "_zaposlens", ThisKey = "oib", OtherKey = "zaposlenik")]
        public EntitySet<zaposlen> zaposlens
        {
            get
            {
                return this._zaposlens;
            }
            set
            {
                this._zaposlens.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_nalog_za_proizvodnjus(nalog_za_proizvodnju entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = this;
        }

        private void detach_nalog_za_proizvodnjus(nalog_za_proizvodnju entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = null;
        }

        private void attach_otpremnicas(otpremnica entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = this;
        }

        private void detach_otpremnicas(otpremnica entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = null;
        }

        private void attach_racuns(racun entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = this;
        }

        private void detach_racuns(racun entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = null;
        }

        private void attach_radis(radi entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik1 = this;
        }

        private void detach_radis(radi entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik1 = null;
        }

        private void attach_temeljnicas(temeljnica entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = this;
        }

        private void detach_temeljnicas(temeljnica entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = null;
        }

        private void attach_vozis(vozi entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = this;
        }

        private void detach_vozis(vozi entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik = null;
        }

        private void attach_zaposlens(zaposlen entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik1 = this;
        }

        private void detach_zaposlens(zaposlen entity)
        {
            this.SendPropertyChanging();
            entity.zaposlenik1 = null;
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.korisnicki_racun")]
    public partial class korisnicki_racun : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _zaposlenik;

        private string _korisnicko_ime;

        private string _lozinka;

        private EntityRef<zaposlenik> _zaposlenik1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnzaposlenikChanging(string value);
        partial void OnzaposlenikChanged();
        partial void Onkorisnicko_imeChanging(string value);
        partial void Onkorisnicko_imeChanged();
        partial void OnlozinkaChanging(string value);
        partial void OnlozinkaChanged();
        #endregion

        public korisnicki_racun()
        {
            this._zaposlenik1 = default(EntityRef<zaposlenik>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_zaposlenik", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string zaposlenik
        {
            get
            {
                return this._zaposlenik;
            }
            set
            {
                if ((this._zaposlenik != value))
                {
                    if (this._zaposlenik1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnzaposlenikChanging(value);
                    this.SendPropertyChanging();
                    this._zaposlenik = value;
                    this.SendPropertyChanged("zaposlenik");
                    this.OnzaposlenikChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_korisnicko_ime", DbType = "VarChar(45) NOT NULL", CanBeNull = false)]
        public string korisnicko_ime
        {
            get
            {
                return this._korisnicko_ime;
            }
            set
            {
                if ((this._korisnicko_ime != value))
                {
                    this.Onkorisnicko_imeChanging(value);
                    this.SendPropertyChanging();
                    this._korisnicko_ime = value;
                    this.SendPropertyChanged("korisnicko_ime");
                    this.Onkorisnicko_imeChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lozinka", DbType = "Char(40) NOT NULL", CanBeNull = false)]
        public string lozinka
        {
            get
            {
                return this._lozinka;
            }
            set
            {
                if ((this._lozinka != value))
                {
                    this.OnlozinkaChanging(value);
                    this.SendPropertyChanging();
                    this._lozinka = value;
                    this.SendPropertyChanged("lozinka");
                    this.OnlozinkaChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_korisnicki_racun", Storage = "_zaposlenik1", ThisKey = "zaposlenik", OtherKey = "oib", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
        public zaposlenik zaposlenik1
        {
            get
            {
                return this._zaposlenik1.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik1.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik1.Entity = null;
                        previousValue.korisnicki_racun = null;
                    }
                    this._zaposlenik1.Entity = value;
                    if ((value != null))
                    {
                        value.korisnicki_racun = this;
                        this._zaposlenik = value.oib;
                    }
                    else
                    {
                        this._zaposlenik = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.nalog_za_proizvodnju")]
    public partial class nalog_za_proizvodnju : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _temeljnica;

        private int _gradiliste;

        private string _izdavatelj;

        private EntityRef<gradiliste> _gradiliste1;

        private EntityRef<zaposlenik> _zaposlenik;

        private EntityRef<temeljnica> _temeljnica1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OntemeljnicaChanging(int value);
        partial void OntemeljnicaChanged();
        partial void OngradilisteChanging(int value);
        partial void OngradilisteChanged();
        partial void OnizdavateljChanging(string value);
        partial void OnizdavateljChanged();
        #endregion

        public nalog_za_proizvodnju()
        {
            this._gradiliste1 = default(EntityRef<gradiliste>);
            this._zaposlenik = default(EntityRef<zaposlenik>);
            this._temeljnica1 = default(EntityRef<temeljnica>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_temeljnica", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int temeljnica
        {
            get
            {
                return this._temeljnica;
            }
            set
            {
                if ((this._temeljnica != value))
                {
                    if (this._temeljnica1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OntemeljnicaChanging(value);
                    this.SendPropertyChanging();
                    this._temeljnica = value;
                    this.SendPropertyChanged("temeljnica");
                    this.OntemeljnicaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gradiliste", DbType = "Int NOT NULL")]
        public int gradiliste
        {
            get
            {
                return this._gradiliste;
            }
            set
            {
                if ((this._gradiliste != value))
                {
                    if (this._gradiliste1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OngradilisteChanging(value);
                    this.SendPropertyChanging();
                    this._gradiliste = value;
                    this.SendPropertyChanged("gradiliste");
                    this.OngradilisteChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_izdavatelj", DbType = "Char(11) NOT NULL", CanBeNull = false)]
        public string izdavatelj
        {
            get
            {
                return this._izdavatelj;
            }
            set
            {
                if ((this._izdavatelj != value))
                {
                    if (this._zaposlenik.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnizdavateljChanging(value);
                    this.SendPropertyChanging();
                    this._izdavatelj = value;
                    this.SendPropertyChanged("izdavatelj");
                    this.OnizdavateljChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "gradiliste_nalog_za_proizvodnju", Storage = "_gradiliste1", ThisKey = "gradiliste", OtherKey = "id", IsForeignKey = true)]
        public gradiliste gradiliste1
        {
            get
            {
                return this._gradiliste1.Entity;
            }
            set
            {
                gradiliste previousValue = this._gradiliste1.Entity;
                if (((previousValue != value)
                            || (this._gradiliste1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._gradiliste1.Entity = null;
                        previousValue.nalog_za_proizvodnjus.Remove(this);
                    }
                    this._gradiliste1.Entity = value;
                    if ((value != null))
                    {
                        value.nalog_za_proizvodnjus.Add(this);
                        this._gradiliste = value.id;
                    }
                    else
                    {
                        this._gradiliste = default(int);
                    }
                    this.SendPropertyChanged("gradiliste1");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_nalog_za_proizvodnju", Storage = "_zaposlenik", ThisKey = "izdavatelj", OtherKey = "oib", IsForeignKey = true)]
        public zaposlenik zaposlenik
        {
            get
            {
                return this._zaposlenik.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik.Entity = null;
                        previousValue.nalog_za_proizvodnjus.Remove(this);
                    }
                    this._zaposlenik.Entity = value;
                    if ((value != null))
                    {
                        value.nalog_za_proizvodnjus.Add(this);
                        this._izdavatelj = value.oib;
                    }
                    else
                    {
                        this._izdavatelj = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "temeljnica_nalog_za_proizvodnju", Storage = "_temeljnica1", ThisKey = "temeljnica", OtherKey = "id", IsForeignKey = true)]
        public temeljnica temeljnica1
        {
            get
            {
                return this._temeljnica1.Entity;
            }
            set
            {
                temeljnica previousValue = this._temeljnica1.Entity;
                if (((previousValue != value)
                            || (this._temeljnica1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._temeljnica1.Entity = null;
                        previousValue.nalog_za_proizvodnju = null;
                    }
                    this._temeljnica1.Entity = value;
                    if ((value != null))
                    {
                        value.nalog_za_proizvodnju = this;
                        this._temeljnica = value.id;
                    }
                    else
                    {
                        this._temeljnica = default(int);
                    }
                    this.SendPropertyChanged("temeljnica1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.narudzbenica_bitumenske_mjesavine")]
    public partial class narudzbenica_bitumenske_mjesavine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _temeljnica;

        private System.DateTime _datum_potrazivanja;

        private string _narucitelj;

        private EntityRef<poduzece> _poduzece;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OntemeljnicaChanging(int value);
        partial void OntemeljnicaChanged();
        partial void Ondatum_potrazivanjaChanging(System.DateTime value);
        partial void Ondatum_potrazivanjaChanged();
        partial void OnnaruciteljChanging(string value);
        partial void OnnaruciteljChanged();
        #endregion

        public narudzbenica_bitumenske_mjesavine()
        {
            this._poduzece = default(EntityRef<poduzece>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_temeljnica", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int temeljnica
        {
            get
            {
                return this._temeljnica;
            }
            set
            {
                if ((this._temeljnica != value))
                {
                    this.OntemeljnicaChanging(value);
                    this.SendPropertyChanging();
                    this._temeljnica = value;
                    this.SendPropertyChanged("temeljnica");
                    this.OntemeljnicaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_potrazivanja", DbType = "DateTime NOT NULL")]
        public System.DateTime datum_potrazivanja
        {
            get
            {
                return this._datum_potrazivanja;
            }
            set
            {
                if ((this._datum_potrazivanja != value))
                {
                    this.Ondatum_potrazivanjaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_potrazivanja = value;
                    this.SendPropertyChanged("datum_potrazivanja");
                    this.Ondatum_potrazivanjaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_narucitelj", DbType = "Char(11) NOT NULL", CanBeNull = false)]
        public string narucitelj
        {
            get
            {
                return this._narucitelj;
            }
            set
            {
                if ((this._narucitelj != value))
                {
                    if (this._poduzece.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnnaruciteljChanging(value);
                    this.SendPropertyChanging();
                    this._narucitelj = value;
                    this.SendPropertyChanged("narucitelj");
                    this.OnnaruciteljChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "poduzece_narudzbenica_bitumenske_mjesavine", Storage = "_poduzece", ThisKey = "narucitelj", OtherKey = "oib", IsForeignKey = true)]
        public poduzece poduzece
        {
            get
            {
                return this._poduzece.Entity;
            }
            set
            {
                poduzece previousValue = this._poduzece.Entity;
                if (((previousValue != value)
                            || (this._poduzece.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._poduzece.Entity = null;
                        previousValue.narudzbenica_bitumenske_mjesavines.Remove(this);
                    }
                    this._poduzece.Entity = value;
                    if ((value != null))
                    {
                        value.narudzbenica_bitumenske_mjesavines.Add(this);
                        this._narucitelj = value.oib;
                    }
                    else
                    {
                        this._narucitelj = default(string);
                    }
                    this.SendPropertyChanged("poduzece");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.otpremnica")]
    public partial class otpremnica : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _temeljnica;

        private System.DateTime _datum_otpreme;

        private System.Nullable<int> _racun;

        private string _otpremitelj;

        private int _temperatura;

        private EntityRef<zaposlenik> _zaposlenik;

        private EntityRef<racun> _racun1;

        private EntityRef<temeljnica> _temeljnica1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OntemeljnicaChanging(int value);
        partial void OntemeljnicaChanged();
        partial void Ondatum_otpremeChanging(System.DateTime value);
        partial void Ondatum_otpremeChanged();
        partial void OnracunChanging(System.Nullable<int> value);
        partial void OnracunChanged();
        partial void OnotpremiteljChanging(string value);
        partial void OnotpremiteljChanged();
        partial void OntemperaturaChanging(int value);
        partial void OntemperaturaChanged();
        #endregion

        public otpremnica()
        {
            this._zaposlenik = default(EntityRef<zaposlenik>);
            this._racun1 = default(EntityRef<racun>);
            this._temeljnica1 = default(EntityRef<temeljnica>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_temeljnica", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int temeljnica
        {
            get
            {
                return this._temeljnica;
            }
            set
            {
                if ((this._temeljnica != value))
                {
                    if (this._temeljnica1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OntemeljnicaChanging(value);
                    this.SendPropertyChanging();
                    this._temeljnica = value;
                    this.SendPropertyChanged("temeljnica");
                    this.OntemeljnicaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_otpreme", DbType = "DateTime NOT NULL")]
        public System.DateTime datum_otpreme
        {
            get
            {
                return this._datum_otpreme;
            }
            set
            {
                if ((this._datum_otpreme != value))
                {
                    this.Ondatum_otpremeChanging(value);
                    this.SendPropertyChanging();
                    this._datum_otpreme = value;
                    this.SendPropertyChanged("datum_otpreme");
                    this.Ondatum_otpremeChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_racun", DbType = "Int")]
        public System.Nullable<int> racun
        {
            get
            {
                return this._racun;
            }
            set
            {
                if ((this._racun != value))
                {
                    if (this._racun1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnracunChanging(value);
                    this.SendPropertyChanging();
                    this._racun = value;
                    this.SendPropertyChanged("racun");
                    this.OnracunChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_otpremitelj", DbType = "Char(11) NOT NULL", CanBeNull = false)]
        public string otpremitelj
        {
            get
            {
                return this._otpremitelj;
            }
            set
            {
                if ((this._otpremitelj != value))
                {
                    if (this._zaposlenik.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnotpremiteljChanging(value);
                    this.SendPropertyChanging();
                    this._otpremitelj = value;
                    this.SendPropertyChanged("otpremitelj");
                    this.OnotpremiteljChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_temperatura", DbType = "Int NOT NULL")]
        public int temperatura
        {
            get
            {
                return this._temperatura;
            }
            set
            {
                if ((this._temperatura != value))
                {
                    this.OntemperaturaChanging(value);
                    this.SendPropertyChanging();
                    this._temperatura = value;
                    this.SendPropertyChanged("temperatura");
                    this.OntemperaturaChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_otpremnica", Storage = "_zaposlenik", ThisKey = "otpremitelj", OtherKey = "oib", IsForeignKey = true)]
        public zaposlenik zaposlenik
        {
            get
            {
                return this._zaposlenik.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik.Entity = null;
                        previousValue.otpremnicas.Remove(this);
                    }
                    this._zaposlenik.Entity = value;
                    if ((value != null))
                    {
                        value.otpremnicas.Add(this);
                        this._otpremitelj = value.oib;
                    }
                    else
                    {
                        this._otpremitelj = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "racun_otpremnica", Storage = "_racun1", ThisKey = "racun", OtherKey = "id", IsForeignKey = true)]
        public racun racun1
        {
            get
            {
                return this._racun1.Entity;
            }
            set
            {
                racun previousValue = this._racun1.Entity;
                if (((previousValue != value)
                            || (this._racun1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._racun1.Entity = null;
                        previousValue.otpremnicas.Remove(this);
                    }
                    this._racun1.Entity = value;
                    if ((value != null))
                    {
                        value.otpremnicas.Add(this);
                        this._racun = value.id;
                    }
                    else
                    {
                        this._racun = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("racun1");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "temeljnica_otpremnica", Storage = "_temeljnica1", ThisKey = "temeljnica", OtherKey = "id", IsForeignKey = true)]
        public temeljnica temeljnica1
        {
            get
            {
                return this._temeljnica1.Entity;
            }
            set
            {
                temeljnica previousValue = this._temeljnica1.Entity;
                if (((previousValue != value)
                            || (this._temeljnica1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._temeljnica1.Entity = null;
                        previousValue.otpremnica = null;
                    }
                    this._temeljnica1.Entity = value;
                    if ((value != null))
                    {
                        value.otpremnica = this;
                        this._temeljnica = value.id;
                    }
                    else
                    {
                        this._temeljnica = default(int);
                    }
                    this.SendPropertyChanged("temeljnica1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.poduzece")]
    public partial class poduzece : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _oib;

        private string _naziv;

        private string _adresa;

        private string _iban;

        private EntitySet<narudzbenica_bitumenske_mjesavine> _narudzbenica_bitumenske_mjesavines;

        private EntitySet<rabat> _rabats;

        private EntitySet<zaposlen> _zaposlens;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnoibChanging(string value);
        partial void OnoibChanged();
        partial void OnnazivChanging(string value);
        partial void OnnazivChanged();
        partial void OnadresaChanging(string value);
        partial void OnadresaChanged();
        partial void OnibanChanging(string value);
        partial void OnibanChanged();
        #endregion

        public poduzece()
        {
            this._narudzbenica_bitumenske_mjesavines = new EntitySet<narudzbenica_bitumenske_mjesavine>(new Action<narudzbenica_bitumenske_mjesavine>(this.attach_narudzbenica_bitumenske_mjesavines), new Action<narudzbenica_bitumenske_mjesavine>(this.detach_narudzbenica_bitumenske_mjesavines));
            this._rabats = new EntitySet<rabat>(new Action<rabat>(this.attach_rabats), new Action<rabat>(this.detach_rabats));
            this._zaposlens = new EntitySet<zaposlen>(new Action<zaposlen>(this.attach_zaposlens), new Action<zaposlen>(this.detach_zaposlens));
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_oib", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string oib
        {
            get
            {
                return this._oib;
            }
            set
            {
                if ((this._oib != value))
                {
                    this.OnoibChanging(value);
                    this.SendPropertyChanging();
                    this._oib = value;
                    this.SendPropertyChanged("oib");
                    this.OnoibChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_naziv", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string naziv
        {
            get
            {
                return this._naziv;
            }
            set
            {
                if ((this._naziv != value))
                {
                    this.OnnazivChanging(value);
                    this.SendPropertyChanging();
                    this._naziv = value;
                    this.SendPropertyChanged("naziv");
                    this.OnnazivChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_adresa", DbType = "VarChar(100)")]
        public string adresa
        {
            get
            {
                return this._adresa;
            }
            set
            {
                if ((this._adresa != value))
                {
                    this.OnadresaChanging(value);
                    this.SendPropertyChanging();
                    this._adresa = value;
                    this.SendPropertyChanged("adresa");
                    this.OnadresaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_iban", DbType = "VarChar(34)")]
        public string iban
        {
            get
            {
                return this._iban;
            }
            set
            {
                if ((this._iban != value))
                {
                    this.OnibanChanging(value);
                    this.SendPropertyChanging();
                    this._iban = value;
                    this.SendPropertyChanged("iban");
                    this.OnibanChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "poduzece_narudzbenica_bitumenske_mjesavine", Storage = "_narudzbenica_bitumenske_mjesavines", ThisKey = "oib", OtherKey = "narucitelj")]
        public EntitySet<narudzbenica_bitumenske_mjesavine> narudzbenica_bitumenske_mjesavines
        {
            get
            {
                return this._narudzbenica_bitumenske_mjesavines;
            }
            set
            {
                this._narudzbenica_bitumenske_mjesavines.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "poduzece_rabat", Storage = "_rabats", ThisKey = "oib", OtherKey = "poslovni_partner")]
        public EntitySet<rabat> rabats
        {
            get
            {
                return this._rabats;
            }
            set
            {
                this._rabats.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "poduzece_zaposlen", Storage = "_zaposlens", ThisKey = "oib", OtherKey = "poduzece")]
        public EntitySet<zaposlen> zaposlens
        {
            get
            {
                return this._zaposlens;
            }
            set
            {
                this._zaposlens.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_narudzbenica_bitumenske_mjesavines(narudzbenica_bitumenske_mjesavine entity)
        {
            this.SendPropertyChanging();
            entity.poduzece = this;
        }

        private void detach_narudzbenica_bitumenske_mjesavines(narudzbenica_bitumenske_mjesavine entity)
        {
            this.SendPropertyChanging();
            entity.poduzece = null;
        }

        private void attach_rabats(rabat entity)
        {
            this.SendPropertyChanging();
            entity.poduzece = this;
        }

        private void detach_rabats(rabat entity)
        {
            this.SendPropertyChanging();
            entity.poduzece = null;
        }

        private void attach_zaposlens(zaposlen entity)
        {
            this.SendPropertyChanging();
            entity.poduzece1 = this;
        }

        private void detach_zaposlens(zaposlen entity)
        {
            this.SendPropertyChanging();
            entity.poduzece1 = null;
        }
    }

    [DataContract(Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.rabat")]
    public partial class rabat : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _artikl;

        private string _poslovni_partner;

        private decimal _popust;

        private EntityRef<artikl> _artikl1;

        private EntityRef<poduzece> _poduzece;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnartiklChanging(int value);
        partial void OnartiklChanged();
        partial void Onposlovni_partnerChanging(string value);
        partial void Onposlovni_partnerChanged();
        partial void OnpopustChanging(decimal value);
        partial void OnpopustChanged();
        #endregion

        public rabat()
        {
            this._artikl1 = default(EntityRef<artikl>);
            this._poduzece = default(EntityRef<poduzece>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_artikl", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int artikl
        {
            get
            {
                return this._artikl;
            }
            set
            {
                if ((this._artikl != value))
                {
                    if (this._artikl1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnartiklChanging(value);
                    this.SendPropertyChanging();
                    this._artikl = value;
                    this.SendPropertyChanged("artikl");
                    this.OnartiklChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_poslovni_partner", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string poslovni_partner
        {
            get
            {
                return this._poslovni_partner;
            }
            set
            {
                if ((this._poslovni_partner != value))
                {
                    if (this._poduzece.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onposlovni_partnerChanging(value);
                    this.SendPropertyChanging();
                    this._poslovni_partner = value;
                    this.SendPropertyChanged("poslovni_partner");
                    this.Onposlovni_partnerChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_popust", DbType = "Decimal(5,3) NOT NULL")]
        public decimal popust
        {
            get
            {
                return this._popust;
            }
            set
            {
                if ((this._popust != value))
                {
                    this.OnpopustChanging(value);
                    this.SendPropertyChanging();
                    this._popust = value;
                    this.SendPropertyChanged("popust");
                    this.OnpopustChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "artikl_rabat", Storage = "_artikl1", ThisKey = "artikl", OtherKey = "id", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
        public artikl artikl1
        {
            get
            {
                return this._artikl1.Entity;
            }
            set
            {
                artikl previousValue = this._artikl1.Entity;
                if (((previousValue != value)
                            || (this._artikl1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._artikl1.Entity = null;
                        previousValue.rabats.Remove(this);
                    }
                    this._artikl1.Entity = value;
                    if ((value != null))
                    {
                        value.rabats.Add(this);
                        this._artikl = value.id;
                    }
                    else
                    {
                        this._artikl = default(int);
                    }
                    this.SendPropertyChanged("artikl1");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "poduzece_rabat", Storage = "_poduzece", ThisKey = "poslovni_partner", OtherKey = "oib", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
        public poduzece poduzece
        {
            get
            {
                return this._poduzece.Entity;
            }
            set
            {
                poduzece previousValue = this._poduzece.Entity;
                if (((previousValue != value)
                            || (this._poduzece.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._poduzece.Entity = null;
                        previousValue.rabats.Remove(this);
                    }
                    this._poduzece.Entity = value;
                    if ((value != null))
                    {
                        value.rabats.Add(this);
                        this._poslovni_partner = value.oib;
                    }
                    else
                    {
                        this._poslovni_partner = default(string);
                    }
                    this.SendPropertyChanged("poduzece");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.racun")]
    public partial class racun : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private System.DateTime _datum_izdavanja;

        private string _izdavatelj;

        private EntitySet<otpremnica> _otpremnicas;

        private EntityRef<zaposlenik> _zaposlenik;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void Ondatum_izdavanjaChanging(System.DateTime value);
        partial void Ondatum_izdavanjaChanged();
        partial void OnizdavateljChanging(string value);
        partial void OnizdavateljChanged();
        #endregion

        public racun()
        {
            this._otpremnicas = new EntitySet<otpremnica>(new Action<otpremnica>(this.attach_otpremnicas), new Action<otpremnica>(this.detach_otpremnicas));
            this._zaposlenik = default(EntityRef<zaposlenik>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_izdavanja", DbType = "DateTime NOT NULL")]
        public System.DateTime datum_izdavanja
        {
            get
            {
                return this._datum_izdavanja;
            }
            set
            {
                if ((this._datum_izdavanja != value))
                {
                    this.Ondatum_izdavanjaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_izdavanja = value;
                    this.SendPropertyChanged("datum_izdavanja");
                    this.Ondatum_izdavanjaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_izdavatelj", DbType = "Char(11) NOT NULL", CanBeNull = false)]
        public string izdavatelj
        {
            get
            {
                return this._izdavatelj;
            }
            set
            {
                if ((this._izdavatelj != value))
                {
                    if (this._zaposlenik.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnizdavateljChanging(value);
                    this.SendPropertyChanging();
                    this._izdavatelj = value;
                    this.SendPropertyChanged("izdavatelj");
                    this.OnizdavateljChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "racun_otpremnica", Storage = "_otpremnicas", ThisKey = "id", OtherKey = "racun")]
        public EntitySet<otpremnica> otpremnicas
        {
            get
            {
                return this._otpremnicas;
            }
            set
            {
                this._otpremnicas.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_racun", Storage = "_zaposlenik", ThisKey = "izdavatelj", OtherKey = "oib", IsForeignKey = true)]
        public zaposlenik zaposlenik
        {
            get
            {
                return this._zaposlenik.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik.Entity = null;
                        previousValue.racuns.Remove(this);
                    }
                    this._zaposlenik.Entity = value;
                    if ((value != null))
                    {
                        value.racuns.Add(this);
                        this._izdavatelj = value.oib;
                    }
                    else
                    {
                        this._izdavatelj = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_otpremnicas(otpremnica entity)
        {
            this.SendPropertyChanging();
            entity.racun1 = this;
        }

        private void detach_otpremnicas(otpremnica entity)
        {
            this.SendPropertyChanging();
            entity.racun1 = null;
        }
    }

    [DataContract(Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.radi")]
    public partial class radi : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _zaposlenik;

        private int _radno_mjesto;

        private System.DateTime _datum_pocetka;

        private System.Nullable<System.DateTime> _datum_zavrsetka;

        private EntityRef<zaposlenik> _zaposlenik1;

        private EntityRef<radno_mjesto> _radno_mjesto1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnzaposlenikChanging(string value);
        partial void OnzaposlenikChanged();
        partial void Onradno_mjestoChanging(int value);
        partial void Onradno_mjestoChanged();
        partial void Ondatum_pocetkaChanging(System.DateTime value);
        partial void Ondatum_pocetkaChanged();
        partial void Ondatum_zavrsetkaChanging(System.Nullable<System.DateTime> value);
        partial void Ondatum_zavrsetkaChanged();
        #endregion

        public radi()
        {
            this._zaposlenik1 = default(EntityRef<zaposlenik>);
            this._radno_mjesto1 = default(EntityRef<radno_mjesto>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_zaposlenik", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string zaposlenik
        {
            get
            {
                return this._zaposlenik;
            }
            set
            {
                if ((this._zaposlenik != value))
                {
                    if (this._zaposlenik1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnzaposlenikChanging(value);
                    this.SendPropertyChanging();
                    this._zaposlenik = value;
                    this.SendPropertyChanged("zaposlenik");
                    this.OnzaposlenikChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_radno_mjesto", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int radno_mjesto
        {
            get
            {
                return this._radno_mjesto;
            }
            set
            {
                if ((this._radno_mjesto != value))
                {
                    if (this._radno_mjesto1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onradno_mjestoChanging(value);
                    this.SendPropertyChanging();
                    this._radno_mjesto = value;
                    this.SendPropertyChanged("radno_mjesto");
                    this.Onradno_mjestoChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_pocetka", DbType = "Date NOT NULL", IsPrimaryKey = true)]
        public System.DateTime datum_pocetka
        {
            get
            {
                return this._datum_pocetka;
            }
            set
            {
                if ((this._datum_pocetka != value))
                {
                    this.Ondatum_pocetkaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_pocetka = value;
                    this.SendPropertyChanged("datum_pocetka");
                    this.Ondatum_pocetkaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_zavrsetka", DbType = "Date")]
        public System.Nullable<System.DateTime> datum_zavrsetka
        {
            get
            {
                return this._datum_zavrsetka;
            }
            set
            {
                if ((this._datum_zavrsetka != value))
                {
                    this.Ondatum_zavrsetkaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_zavrsetka = value;
                    this.SendPropertyChanged("datum_zavrsetka");
                    this.Ondatum_zavrsetkaChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_radi", Storage = "_zaposlenik1", ThisKey = "zaposlenik", OtherKey = "oib", IsForeignKey = true)]
        public zaposlenik zaposlenik1
        {
            get
            {
                return this._zaposlenik1.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik1.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik1.Entity = null;
                        previousValue.radis.Remove(this);
                    }
                    this._zaposlenik1.Entity = value;
                    if ((value != null))
                    {
                        value.radis.Add(this);
                        this._zaposlenik = value.oib;
                    }
                    else
                    {
                        this._zaposlenik = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik1");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "radno_mjesto_radi", Storage = "_radno_mjesto1", ThisKey = "radno_mjesto", OtherKey = "id", IsForeignKey = true)]
        public radno_mjesto radno_mjesto1
        {
            get
            {
                return this._radno_mjesto1.Entity;
            }
            set
            {
                radno_mjesto previousValue = this._radno_mjesto1.Entity;
                if (((previousValue != value)
                            || (this._radno_mjesto1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._radno_mjesto1.Entity = null;
                        previousValue.radis.Remove(this);
                    }
                    this._radno_mjesto1.Entity = value;
                    if ((value != null))
                    {
                        value.radis.Add(this);
                        this._radno_mjesto = value.id;
                    }
                    else
                    {
                        this._radno_mjesto = default(int);
                    }
                    this.SendPropertyChanged("radno_mjesto1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.radno_mjesto")]
    public partial class radno_mjesto : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _naziv;

        private EntitySet<radi> _radis;

        private EntitySet<tablicna_privilegija> _tablicna_privilegijas;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnnazivChanging(string value);
        partial void OnnazivChanged();
        #endregion

        public radno_mjesto()
        {
            this._radis = new EntitySet<radi>(new Action<radi>(this.attach_radis), new Action<radi>(this.detach_radis));
            this._tablicna_privilegijas = new EntitySet<tablicna_privilegija>(new Action<tablicna_privilegija>(this.attach_tablicna_privilegijas), new Action<tablicna_privilegija>(this.detach_tablicna_privilegijas));
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_naziv", DbType = "VarChar(45) NOT NULL", CanBeNull = false)]
        public string naziv
        {
            get
            {
                return this._naziv;
            }
            set
            {
                if ((this._naziv != value))
                {
                    this.OnnazivChanging(value);
                    this.SendPropertyChanging();
                    this._naziv = value;
                    this.SendPropertyChanged("naziv");
                    this.OnnazivChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "radno_mjesto_radi", Storage = "_radis", ThisKey = "id", OtherKey = "radno_mjesto")]
        public EntitySet<radi> radis
        {
            get
            {
                return this._radis;
            }
            set
            {
                this._radis.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "radno_mjesto_tablicna_privilegija", Storage = "_tablicna_privilegijas", ThisKey = "id", OtherKey = "radno_mjesto")]
        public EntitySet<tablicna_privilegija> tablicna_privilegijas
        {
            get
            {
                return this._tablicna_privilegijas;
            }
            set
            {
                this._tablicna_privilegijas.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_radis(radi entity)
        {
            this.SendPropertyChanging();
            entity.radno_mjesto1 = this;
        }

        private void detach_radis(radi entity)
        {
            this.SendPropertyChanging();
            entity.radno_mjesto1 = null;
        }

        private void attach_tablicna_privilegijas(tablicna_privilegija entity)
        {
            this.SendPropertyChanging();
            entity.radno_mjesto1 = this;
        }

        private void detach_tablicna_privilegijas(tablicna_privilegija entity)
        {
            this.SendPropertyChanging();
            entity.radno_mjesto1 = null;
        }
    }

    [DataContract(Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tablicna_privilegija")]
    public partial class tablicna_privilegija : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _radno_mjesto;

        private string _naziv_tablice;

        private char _operacija;

        private EntityRef<radno_mjesto> _radno_mjesto1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onradno_mjestoChanging(int value);
        partial void Onradno_mjestoChanged();
        partial void Onnaziv_tabliceChanging(string value);
        partial void Onnaziv_tabliceChanged();
        partial void OnoperacijaChanging(char value);
        partial void OnoperacijaChanged();
        #endregion

        public tablicna_privilegija()
        {
            this._radno_mjesto1 = default(EntityRef<radno_mjesto>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_radno_mjesto", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int radno_mjesto
        {
            get
            {
                return this._radno_mjesto;
            }
            set
            {
                if ((this._radno_mjesto != value))
                {
                    if (this._radno_mjesto1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onradno_mjestoChanging(value);
                    this.SendPropertyChanging();
                    this._radno_mjesto = value;
                    this.SendPropertyChanged("radno_mjesto");
                    this.Onradno_mjestoChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_naziv_tablice", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string naziv_tablice
        {
            get
            {
                return this._naziv_tablice;
            }
            set
            {
                if ((this._naziv_tablice != value))
                {
                    this.Onnaziv_tabliceChanging(value);
                    this.SendPropertyChanging();
                    this._naziv_tablice = value;
                    this.SendPropertyChanged("naziv_tablice");
                    this.Onnaziv_tabliceChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_operacija", DbType = "Char(1) NOT NULL", IsPrimaryKey = true)]
        public char operacija
        {
            get
            {
                return this._operacija;
            }
            set
            {
                if ((this._operacija != value))
                {
                    this.OnoperacijaChanging(value);
                    this.SendPropertyChanging();
                    this._operacija = value;
                    this.SendPropertyChanged("operacija");
                    this.OnoperacijaChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "radno_mjesto_tablicna_privilegija", Storage = "_radno_mjesto1", ThisKey = "radno_mjesto", OtherKey = "id", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
        public radno_mjesto radno_mjesto1
        {
            get
            {
                return this._radno_mjesto1.Entity;
            }
            set
            {
                radno_mjesto previousValue = this._radno_mjesto1.Entity;
                if (((previousValue != value)
                            || (this._radno_mjesto1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._radno_mjesto1.Entity = null;
                        previousValue.tablicna_privilegijas.Remove(this);
                    }
                    this._radno_mjesto1.Entity = value;
                    if ((value != null))
                    {
                        value.tablicna_privilegijas.Add(this);
                        this._radno_mjesto = value.id;
                    }
                    else
                    {
                        this._radno_mjesto = default(int);
                    }
                    this.SendPropertyChanged("radno_mjesto1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.temeljnica")]
    public partial class temeljnica : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private System.DateTime _datum_izdavanja;

        private decimal _kolicina;

        private string _vozilo;

        private string _vozac;

        private int _artikl;

        private EntityRef<nalog_za_proizvodnju> _nalog_za_proizvodnju;

        private EntityRef<otpremnica> _otpremnica;

        private EntityRef<artikl> _artikl1;

        private EntityRef<zaposlenik> _zaposlenik;

        private EntityRef<vozilo> _vozilo1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void Ondatum_izdavanjaChanging(System.DateTime value);
        partial void Ondatum_izdavanjaChanged();
        partial void OnkolicinaChanging(decimal value);
        partial void OnkolicinaChanged();
        partial void OnvoziloChanging(string value);
        partial void OnvoziloChanged();
        partial void OnvozacChanging(string value);
        partial void OnvozacChanged();
        partial void OnartiklChanging(int value);
        partial void OnartiklChanged();
        #endregion

        public temeljnica()
        {
            this._nalog_za_proizvodnju = default(EntityRef<nalog_za_proizvodnju>);
            this._otpremnica = default(EntityRef<otpremnica>);
            this._artikl1 = default(EntityRef<artikl>);
            this._zaposlenik = default(EntityRef<zaposlenik>);
            this._vozilo1 = default(EntityRef<vozilo>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_izdavanja", DbType = "DateTime NOT NULL")]
        public System.DateTime datum_izdavanja
        {
            get
            {
                return this._datum_izdavanja;
            }
            set
            {
                if ((this._datum_izdavanja != value))
                {
                    this.Ondatum_izdavanjaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_izdavanja = value;
                    this.SendPropertyChanged("datum_izdavanja");
                    this.Ondatum_izdavanjaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_kolicina", DbType = "Decimal(5,3) NOT NULL")]
        public decimal kolicina
        {
            get
            {
                return this._kolicina;
            }
            set
            {
                if ((this._kolicina != value))
                {
                    this.OnkolicinaChanging(value);
                    this.SendPropertyChanging();
                    this._kolicina = value;
                    this.SendPropertyChanged("kolicina");
                    this.OnkolicinaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vozilo", DbType = "VarChar(8) NOT NULL", CanBeNull = false)]
        public string vozilo
        {
            get
            {
                return this._vozilo;
            }
            set
            {
                if ((this._vozilo != value))
                {
                    if (this._vozilo1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnvoziloChanging(value);
                    this.SendPropertyChanging();
                    this._vozilo = value;
                    this.SendPropertyChanged("vozilo");
                    this.OnvoziloChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vozac", DbType = "Char(11) NOT NULL", CanBeNull = false)]
        public string vozac
        {
            get
            {
                return this._vozac;
            }
            set
            {
                if ((this._vozac != value))
                {
                    if (this._zaposlenik.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnvozacChanging(value);
                    this.SendPropertyChanging();
                    this._vozac = value;
                    this.SendPropertyChanged("vozac");
                    this.OnvozacChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_artikl", DbType = "Int NOT NULL")]
        public int artikl
        {
            get
            {
                return this._artikl;
            }
            set
            {
                if ((this._artikl != value))
                {
                    if (this._artikl1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnartiklChanging(value);
                    this.SendPropertyChanging();
                    this._artikl = value;
                    this.SendPropertyChanged("artikl");
                    this.OnartiklChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "temeljnica_nalog_za_proizvodnju", Storage = "_nalog_za_proizvodnju", ThisKey = "id", OtherKey = "temeljnica", IsUnique = true, IsForeignKey = false)]
        public nalog_za_proizvodnju nalog_za_proizvodnju
        {
            get
            {
                return this._nalog_za_proizvodnju.Entity;
            }
            set
            {
                nalog_za_proizvodnju previousValue = this._nalog_za_proizvodnju.Entity;
                if (((previousValue != value)
                            || (this._nalog_za_proizvodnju.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._nalog_za_proizvodnju.Entity = null;
                        previousValue.temeljnica1 = null;
                    }
                    this._nalog_za_proizvodnju.Entity = value;
                    if ((value != null))
                    {
                        value.temeljnica1 = this;
                    }
                    this.SendPropertyChanged("nalog_za_proizvodnju");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "temeljnica_otpremnica", Storage = "_otpremnica", ThisKey = "id", OtherKey = "temeljnica", IsUnique = true, IsForeignKey = false)]
        public otpremnica otpremnica
        {
            get
            {
                return this._otpremnica.Entity;
            }
            set
            {
                otpremnica previousValue = this._otpremnica.Entity;
                if (((previousValue != value)
                            || (this._otpremnica.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._otpremnica.Entity = null;
                        previousValue.temeljnica1 = null;
                    }
                    this._otpremnica.Entity = value;
                    if ((value != null))
                    {
                        value.temeljnica1 = this;
                    }
                    this.SendPropertyChanged("otpremnica");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "artikl_temeljnica", Storage = "_artikl1", ThisKey = "artikl", OtherKey = "id", IsForeignKey = true)]
        public artikl artikl1
        {
            get
            {
                return this._artikl1.Entity;
            }
            set
            {
                artikl previousValue = this._artikl1.Entity;
                if (((previousValue != value)
                            || (this._artikl1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._artikl1.Entity = null;
                        previousValue.temeljnicas.Remove(this);
                    }
                    this._artikl1.Entity = value;
                    if ((value != null))
                    {
                        value.temeljnicas.Add(this);
                        this._artikl = value.id;
                    }
                    else
                    {
                        this._artikl = default(int);
                    }
                    this.SendPropertyChanged("artikl1");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_temeljnica", Storage = "_zaposlenik", ThisKey = "vozac", OtherKey = "oib", IsForeignKey = true)]
        public zaposlenik zaposlenik
        {
            get
            {
                return this._zaposlenik.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik.Entity = null;
                        previousValue.temeljnicas.Remove(this);
                    }
                    this._zaposlenik.Entity = value;
                    if ((value != null))
                    {
                        value.temeljnicas.Add(this);
                        this._vozac = value.oib;
                    }
                    else
                    {
                        this._vozac = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "vozilo_temeljnica", Storage = "_vozilo1", ThisKey = "vozilo", OtherKey = "registracijski_broj", IsForeignKey = true)]
        public vozilo vozilo1
        {
            get
            {
                return this._vozilo1.Entity;
            }
            set
            {
                vozilo previousValue = this._vozilo1.Entity;
                if (((previousValue != value)
                            || (this._vozilo1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._vozilo1.Entity = null;
                        previousValue.temeljnicas.Remove(this);
                    }
                    this._vozilo1.Entity = value;
                    if ((value != null))
                    {
                        value.temeljnicas.Add(this);
                        this._vozilo = value.registracijski_broj;
                    }
                    else
                    {
                        this._vozilo = default(string);
                    }
                    this.SendPropertyChanged("vozilo1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DataContract(Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.vozi")]
    public partial class vozi : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _vozilo;

        private string _vozac;

        private System.DateTime _datum_pocetka;

        private System.Nullable<System.DateTime> _datum_zavrsetka;

        private EntityRef<vozi> _vozi2;

        private EntityRef<zaposlenik> _zaposlenik;

        private EntityRef<vozi> _vozi1;

        private EntityRef<vozilo> _vozilo1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnvoziloChanging(string value);
        partial void OnvoziloChanged();
        partial void OnvozacChanging(string value);
        partial void OnvozacChanged();
        partial void Ondatum_pocetkaChanging(System.DateTime value);
        partial void Ondatum_pocetkaChanged();
        partial void Ondatum_zavrsetkaChanging(System.Nullable<System.DateTime> value);
        partial void Ondatum_zavrsetkaChanged();
        #endregion

        public vozi()
        {
            this._vozi2 = default(EntityRef<vozi>);
            this._zaposlenik = default(EntityRef<zaposlenik>);
            this._vozi1 = default(EntityRef<vozi>);
            this._vozilo1 = default(EntityRef<vozilo>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vozilo", DbType = "VarChar(8) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string vozilo
        {
            get
            {
                return this._vozilo;
            }
            set
            {
                if ((this._vozilo != value))
                {
                    if ((this._vozi1.HasLoadedOrAssignedValue || this._vozilo1.HasLoadedOrAssignedValue))
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnvoziloChanging(value);
                    this.SendPropertyChanging();
                    this._vozilo = value;
                    this.SendPropertyChanged("vozilo");
                    this.OnvoziloChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vozac", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string vozac
        {
            get
            {
                return this._vozac;
            }
            set
            {
                if ((this._vozac != value))
                {
                    if ((this._zaposlenik.HasLoadedOrAssignedValue || this._vozi1.HasLoadedOrAssignedValue))
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnvozacChanging(value);
                    this.SendPropertyChanging();
                    this._vozac = value;
                    this.SendPropertyChanged("vozac");
                    this.OnvozacChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_pocetka", DbType = "Date NOT NULL", IsPrimaryKey = true)]
        public System.DateTime datum_pocetka
        {
            get
            {
                return this._datum_pocetka;
            }
            set
            {
                if ((this._datum_pocetka != value))
                {
                    if (this._vozi1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ondatum_pocetkaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_pocetka = value;
                    this.SendPropertyChanged("datum_pocetka");
                    this.Ondatum_pocetkaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_zavrsetka", DbType = "Date")]
        public System.Nullable<System.DateTime> datum_zavrsetka
        {
            get
            {
                return this._datum_zavrsetka;
            }
            set
            {
                if ((this._datum_zavrsetka != value))
                {
                    this.Ondatum_zavrsetkaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_zavrsetka = value;
                    this.SendPropertyChanged("datum_zavrsetka");
                    this.Ondatum_zavrsetkaChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "vozi_vozi", Storage = "_vozi2", ThisKey = "vozilo,vozac,datum_pocetka", OtherKey = "vozilo,vozac,datum_pocetka", IsUnique = true, IsForeignKey = false)]
        public vozi vozi2
        {
            get
            {
                return this._vozi2.Entity;
            }
            set
            {
                vozi previousValue = this._vozi2.Entity;
                if (((previousValue != value)
                            || (this._vozi2.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._vozi2.Entity = null;
                        previousValue.vozi1 = null;
                    }
                    this._vozi2.Entity = value;
                    if ((value != null))
                    {
                        value.vozi1 = this;
                    }
                    this.SendPropertyChanged("vozi2");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_vozi", Storage = "_zaposlenik", ThisKey = "vozac", OtherKey = "oib", IsForeignKey = true)]
        public zaposlenik zaposlenik
        {
            get
            {
                return this._zaposlenik.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik.Entity = null;
                        previousValue.vozis.Remove(this);
                    }
                    this._zaposlenik.Entity = value;
                    if ((value != null))
                    {
                        value.vozis.Add(this);
                        this._vozac = value.oib;
                    }
                    else
                    {
                        this._vozac = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "vozi_vozi", Storage = "_vozi1", ThisKey = "vozilo,vozac,datum_pocetka", OtherKey = "vozilo,vozac,datum_pocetka", IsForeignKey = true)]
        public vozi vozi1
        {
            get
            {
                return this._vozi1.Entity;
            }
            set
            {
                vozi previousValue = this._vozi1.Entity;
                if (((previousValue != value)
                            || (this._vozi1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._vozi1.Entity = null;
                        previousValue.vozi2 = null;
                    }
                    this._vozi1.Entity = value;
                    if ((value != null))
                    {
                        value.vozi2 = this;
                        this._vozilo = value.vozilo;
                        this._vozac = value.vozac;
                        this._datum_pocetka = value.datum_pocetka;
                    }
                    else
                    {
                        this._vozilo = default(string);
                        this._vozac = default(string);
                        this._datum_pocetka = default(System.DateTime);
                    }
                    this.SendPropertyChanged("vozi1");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "vozilo_vozi", Storage = "_vozilo1", ThisKey = "vozilo", OtherKey = "registracijski_broj", IsForeignKey = true)]
        public vozilo vozilo1
        {
            get
            {
                return this._vozilo1.Entity;
            }
            set
            {
                vozilo previousValue = this._vozilo1.Entity;
                if (((previousValue != value)
                            || (this._vozilo1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._vozilo1.Entity = null;
                        previousValue.vozis.Remove(this);
                    }
                    this._vozilo1.Entity = value;
                    if ((value != null))
                    {
                        value.vozis.Add(this);
                        this._vozilo = value.registracijski_broj;
                    }
                    else
                    {
                        this._vozilo = default(string);
                    }
                    this.SendPropertyChanged("vozilo1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

        [DataContract(IsReference = true, Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.vozilo")]
    public partial class vozilo : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _registracijski_broj;

        private string _proizvodjac;

        private string _model;

        private EntitySet<temeljnica> _temeljnicas;

        private EntitySet<vozi> _vozis;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onregistracijski_brojChanging(string value);
        partial void Onregistracijski_brojChanged();
        partial void OnproizvodjacChanging(string value);
        partial void OnproizvodjacChanged();
        partial void OnmodelChanging(string value);
        partial void OnmodelChanged();
        #endregion

        public vozilo()
        {
            this._temeljnicas = new EntitySet<temeljnica>(new Action<temeljnica>(this.attach_temeljnicas), new Action<temeljnica>(this.detach_temeljnicas));
            this._vozis = new EntitySet<vozi>(new Action<vozi>(this.attach_vozis), new Action<vozi>(this.detach_vozis));
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_registracijski_broj", DbType = "VarChar(8) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string registracijski_broj
        {
            get
            {
                return this._registracijski_broj;
            }
            set
            {
                if ((this._registracijski_broj != value))
                {
                    this.Onregistracijski_brojChanging(value);
                    this.SendPropertyChanging();
                    this._registracijski_broj = value;
                    this.SendPropertyChanged("registracijski_broj");
                    this.Onregistracijski_brojChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_proizvodjac", DbType = "VarChar(45)")]
        public string proizvodjac
        {
            get
            {
                return this._proizvodjac;
            }
            set
            {
                if ((this._proizvodjac != value))
                {
                    this.OnproizvodjacChanging(value);
                    this.SendPropertyChanging();
                    this._proizvodjac = value;
                    this.SendPropertyChanged("proizvodjac");
                    this.OnproizvodjacChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_model", DbType = "VarChar(45)")]
        public string model
        {
            get
            {
                return this._model;
            }
            set
            {
                if ((this._model != value))
                {
                    this.OnmodelChanging(value);
                    this.SendPropertyChanging();
                    this._model = value;
                    this.SendPropertyChanged("model");
                    this.OnmodelChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "vozilo_temeljnica", Storage = "_temeljnicas", ThisKey = "registracijski_broj", OtherKey = "vozilo")]
        public EntitySet<temeljnica> temeljnicas
        {
            get
            {
                return this._temeljnicas;
            }
            set
            {
                this._temeljnicas.Assign(value);
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "vozilo_vozi", Storage = "_vozis", ThisKey = "registracijski_broj", OtherKey = "vozilo")]
        public EntitySet<vozi> vozis
        {
            get
            {
                return this._vozis;
            }
            set
            {
                this._vozis.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_temeljnicas(temeljnica entity)
        {
            this.SendPropertyChanging();
            entity.vozilo1 = this;
        }

        private void detach_temeljnicas(temeljnica entity)
        {
            this.SendPropertyChanging();
            entity.vozilo1 = null;
        }

        private void attach_vozis(vozi entity)
        {
            this.SendPropertyChanging();
            entity.vozilo1 = this;
        }

        private void detach_vozis(vozi entity)
        {
            this.SendPropertyChanging();
            entity.vozilo1 = null;
        }
    }

    [DataContract(Namespace = "")]
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.zaposlen")]
    public partial class zaposlen : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _zaposlenik;

        private string _poduzece;

        private System.DateTime _datum_pocetka;

        private System.Nullable<System.DateTime> _datum_zavrsetka;

        private EntityRef<poduzece> _poduzece1;

        private EntityRef<zaposlenik> _zaposlenik1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnzaposlenikChanging(string value);
        partial void OnzaposlenikChanged();
        partial void OnpoduzeceChanging(string value);
        partial void OnpoduzeceChanged();
        partial void Ondatum_pocetkaChanging(System.DateTime value);
        partial void Ondatum_pocetkaChanged();
        partial void Ondatum_zavrsetkaChanging(System.Nullable<System.DateTime> value);
        partial void Ondatum_zavrsetkaChanged();
        #endregion

        public zaposlen()
        {
            this._poduzece1 = default(EntityRef<poduzece>);
            this._zaposlenik1 = default(EntityRef<zaposlenik>);
            OnCreated();
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_zaposlenik", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string zaposlenik
        {
            get
            {
                return this._zaposlenik;
            }
            set
            {
                if ((this._zaposlenik != value))
                {
                    if (this._zaposlenik1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnzaposlenikChanging(value);
                    this.SendPropertyChanging();
                    this._zaposlenik = value;
                    this.SendPropertyChanged("zaposlenik");
                    this.OnzaposlenikChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_poduzece", DbType = "Char(11) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
        public string poduzece
        {
            get
            {
                return this._poduzece;
            }
            set
            {
                if ((this._poduzece != value))
                {
                    if (this._poduzece1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnpoduzeceChanging(value);
                    this.SendPropertyChanging();
                    this._poduzece = value;
                    this.SendPropertyChanged("poduzece");
                    this.OnpoduzeceChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_pocetka", DbType = "Date NOT NULL", IsPrimaryKey = true)]
        public System.DateTime datum_pocetka
        {
            get
            {
                return this._datum_pocetka;
            }
            set
            {
                if ((this._datum_pocetka != value))
                {
                    this.Ondatum_pocetkaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_pocetka = value;
                    this.SendPropertyChanged("datum_pocetka");
                    this.Ondatum_pocetkaChanged();
                }
            }
        }

        [DataMemberAttribute]
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_datum_zavrsetka", DbType = "Date")]
        public System.Nullable<System.DateTime> datum_zavrsetka
        {
            get
            {
                return this._datum_zavrsetka;
            }
            set
            {
                if ((this._datum_zavrsetka != value))
                {
                    this.Ondatum_zavrsetkaChanging(value);
                    this.SendPropertyChanging();
                    this._datum_zavrsetka = value;
                    this.SendPropertyChanged("datum_zavrsetka");
                    this.Ondatum_zavrsetkaChanged();
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "poduzece_zaposlen", Storage = "_poduzece1", ThisKey = "poduzece", OtherKey = "oib", IsForeignKey = true)]
        public poduzece poduzece1
        {
            get
            {
                return this._poduzece1.Entity;
            }
            set
            {
                poduzece previousValue = this._poduzece1.Entity;
                if (((previousValue != value)
                            || (this._poduzece1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._poduzece1.Entity = null;
                        previousValue.zaposlens.Remove(this);
                    }
                    this._poduzece1.Entity = value;
                    if ((value != null))
                    {
                        value.zaposlens.Add(this);
                        this._poduzece = value.oib;
                    }
                    else
                    {
                        this._poduzece = default(string);
                    }
                    this.SendPropertyChanged("poduzece1");
                }
            }
        }

        [IgnoreDataMember]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "zaposlenik_zaposlen", Storage = "_zaposlenik1", ThisKey = "zaposlenik", OtherKey = "oib", IsForeignKey = true)]
        public zaposlenik zaposlenik1
        {
            get
            {
                return this._zaposlenik1.Entity;
            }
            set
            {
                zaposlenik previousValue = this._zaposlenik1.Entity;
                if (((previousValue != value)
                            || (this._zaposlenik1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._zaposlenik1.Entity = null;
                        previousValue.zaposlens.Remove(this);
                    }
                    this._zaposlenik1.Entity = value;
                    if ((value != null))
                    {
                        value.zaposlens.Add(this);
                        this._zaposlenik = value.oib;
                    }
                    else
                    {
                        this._zaposlenik = default(string);
                    }
                    this.SendPropertyChanged("zaposlenik1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591
